#+TITLE:  Programmiersprachen:  Glossar

*** C++
    /C++/ ist eine objektorientierte Programmiersprache, deren
    Entwicklung Ende der 70er Jahre mit /C with Classes/ begann.  Die
    Sprache wird ständig weiterentwickelt, wobei der zukünftige
    Standard /C++20/ sein wird.  /C++/ bietet eine /"direct map to
    hardware"/ und /"zero-overhead abstraction"/, eignet sich also
    besonders gut für performancekritische Anwendungen.
*** Quellcode
    /Quellcode/ ist menschenlesbarer und i.d.R. auch vom Menschen
    geschriebener Code.  Je nach Programmiersprache stellt der
    Quellcode eine verschiedene Abstraktion der Hardwareebene dar.
*** Compiler
    Der /Compiler/ übersetzt den Quellcode in Maschinensprache und
    stellt sog. /Objectcode/ her.
*** Objektcode
    Der /Objeketcode/ ist der vom Compiler generierte Maschinencode zu
    jeder Quellcode-Datei.
*** Linker
    Der /Linker/ fügt die Objektdateien in einer einzigen ausführbaren
    Datei zusammen.
*** Ausführbare Datei
    Die /Ausfürbare Datei/ ist das Resultat des Linkens.  Sie stellt
    das fertige Programm dar, das auch ohne, dass der Quellcode
    verfügbar ist, ausgeführt und verwendet werden kann.  Verschiedene
    Betriebssysteme haben verschiedene Formate für Ausführbare
    Binärdateien.
*** =main()=
    Die =main=-Funktion ist der Einstiegspunkt in das Programm.  Sie
    kann ggf. Kommandozeilenparameter übergeben bekommen und gibt als
    =int= einen Exit Code zurück.
*** =#include=
    =#include "foo.bar"= ist eine Anweisung für den Präprozessor, die
    Datei =foo.bar= an dieser Stelle einzufügen.  Die Anweisung wird
    genutzt, um Header einzubinden.  Header aus auf dem System
    installierten Bibliotheken werden so eingebunden: =#include
    <baz>=.
*** Kommentar
    Ein Kommentar wird vom Compiler ignoriert und dient dazu, den Code
    zu dokumentieren.
    #+BEGIN_SRC cpp
// Dies ist ein einzeiliger Kommentar.

/* Dieser Kommentar
   erstreckt sich über
   mehrere Zeilen. */
    #+END_SRC
*** Header
    Eine /Header/-Datei enthählt Methodendeklarationen und
    Klassendefinitionen (wobei die Membervariablen- und funktionen
    deklariert werden).  In Headern werden also Schnittstellen
    festgelegt, deren Ausprägung dann in anderen Dateien implementiert
    wird.  Mit /C++20/-Modulen ist eine solche Trennung nicht mehr
    nötig.
*** Programm
*** Ausgabe
*** =std::cout=
*** =std::cin=
*** =<<=
*** =>>=
*** Funktion
*** Funktionssignatur
*** Deklaration
*** Definition
*** Typ
*** Typkonvertierung
*** Variable
*** Name
*** Wert
*** Initialisierung
*** Zuweisung
*** =const=
*** Gültigkeitsbereich
